/**
 * Maritime Cloud Identity Registry API
 * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@maritimecloud.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';
import * as models from './models';

export interface Service {


    /**
     * The domain name the service will be available on. Used in the issued certificates for the service.
     */
    certDomainName?: string;

    /**
     * Cannot be created/updated by editing in the model. Use the dedicate create and revoke calls.
     */
    certificates?: Array<models.Certificate>;

    createdAt?: Date;

    /**
     * The Maritime Resource Name
     */
    mrn?: string;

    name?: string;

    /**
     * Access type of the OpenId Connect client
     */
    oidcAccessType?: Service.OidcAccessTypeEnum;

    /**
     * The client id of the service in Maritime Cloud. Will be generated.
     */
    oidcClientId?: string;

    /**
     * The client secret of the service in Maritime Cloud. Will be generated.
     */
    oidcClientSecret?: string;

    /**
     * The OpenId Connect redirect uri of service.
     */
    oidcRedirectUri?: string;

    /**
     * Permissions as assigned from the organization
     */
    permissions?: string;

    updatedAt?: Date;
}
export namespace Service {

    export enum OidcAccessTypeEnum {
        public = <any> 'public',
        bearer_only = <any> 'bearer-only',
        confidential = <any> 'confidential',
    }
}
